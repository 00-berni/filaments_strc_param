INFO:__main__: size = (32,32)
INFO:__main__: Call the function `compute_correlation`
INFO:__main__: `diagonal_dist` parameter set to True
DEBUG:__main__: Copy the data and remove the mean
DEBUG:__main__: Compute all positions in the grid
DEBUG:__main__: pos : compilation time: 0.00021958351135253906 s
INFO:__main__: Compute where
DEBUG:__main__: Compute all distances in the grid
DEBUG:__main__: prova : compilation time: 0.05017685890197754 s
DEBUG:__main__: dist : compilation time: 0.05396246910095215 s
INFO:__main__: Compute the array with the unique distances
DEBUG:__main__: Compute each element
DEBUG:__main__: prova1 : compilation time: 0.10194683074951172 s
DEBUG:__main__: prova1_shape = (1024,)
DEBUG:__main__: elem : compilation time: 0.12616395950317383 s
DEBUG:__main__: all_elm_shape = (524800,)
INFO:__main__: Compute the correlation
INFO:__main__: corr : compilation time: 0.004 m
INFO:__main__: corr size = 431
DEBUG:__main__: Top 10 lines
#1: /home/bernardo/Scrivania/FISICA/ASTROFISICA/&Argomenti/Filaments/filaments_strc_param/tests/test_corr.py:223: 4.1211 MiB
    prova1 = np.array([field[*all_pos[:,N]] * field[*all_pos[:,N:]] for N in range(all_pos.shape[1])],dtype='object')
#2: /home/bernardo/Scrivania/FISICA/ASTROFISICA/&Argomenti/Filaments/filaments_strc_param/tests/test_func.py:31: 4.1138 MiB
    return np.sqrt((p1[0]-p2[0])**2 + (p1[1]-p2[1])**2)
#3: /home/bernardo/Scrivania/FISICA/ASTROFISICA/&Argomenti/Filaments/filaments_strc_param/tests/test_corr.py:228: 4.0041 MiB
    all_elem = np.concatenate([field[*all_pos[:,N]] * field[*all_pos[:,N:]] for N in range(all_pos.shape[1])])
#4: /home/bernardo/Scrivania/FISICA/ASTROFISICA/&Argomenti/Filaments/filaments_strc_param/tests/test_corr.py:209: 4.0040 MiB
    all_dist = np.concatenate([distance(all_pos[:,N],all_pos[:,N:]) for N in range(all_pos.shape[1])])
#5: /home/bernardo/Scrivania/FISICA/ASTROFISICA/&Argomenti/Filaments/filaments_strc_param/tests/test_corr.py:191: 0.0157 MiB
    all_pos = np.array([xx.flatten(),yy.flatten()])
#6: /home/bernardo/Scrivania/FISICA/ASTROFISICA/&Argomenti/Filaments/filaments_strc_param/tests/test_corr.py:186: 0.0079 MiB
    field = np.copy(field) - field.mean()
#7: /home/bernardo/Scrivania/FISICA/ASTROFISICA/&Argomenti/Filaments/filaments_strc_param/tests/test_corr.py:204: 0.0079 MiB
    prova = np.array([distance(all_pos[:,N],all_pos[:,N:]) for N in range(all_pos.shape[1])], dtype='object')
#8: /home/bernardo/Scrivania/FISICA/ASTROFISICA/&Argomenti/Filaments/filaments_strc_param/tests/test_corr.py:237: 0.0034 MiB
    correlations = np.array([np.sum(all_elem[all_dist == d]) for d in unq_dist])
#9: /home/bernardo/Scrivania/FISICA/ASTROFISICA/&Argomenti/Filaments/.venv/lib/python3.13/site-packages/numpy/lib/_arraysetops_impl.py:371: 0.0034 MiB
    ret = (aux[mask],)
#10: /usr/lib/python3.13/logging/__init__.py:1602: 0.0005 MiB
    next_f = f.f_back
DEBUG:__main__: 3 other: 0.3 KiB
DEBUG:__main__: Total allocated size: 16.2821 MiB
INFO:__main__: Ram Usage 0.021953582763671875 Gb
INFO:__main__: END
INFO:__main__: Computational time 0.012260774771372477 m
INFO:__main__: Call the function `TEST`
DEBUG:__main__: Copy the data and remove the mean
DEBUG:__main__: Compute all positions in the grid
DEBUG:__main__: pos : compilation time: 0.0002505779266357422 s
INFO:__main__: Check integers
DEBUG:__main__: Interger are present
DEBUG:__main__: Compute pxs
DEBUG:__main__: px : compilation time: 0.001924276351928711 s
INFO:__main__: Compute the correlation
DEBUG:__main__: corr : compilation time: 0.000 m
INFO:__main__: Run the routine
DEBUG:__main__: Run Irrational
DEBUG:__main__: Compute pxs
DEBUG:__main__: px : compilation time: 0.026892662048339844 s
INFO:__main__: Compute the correlation
DEBUG:__main__: Positions :
[array([1]) array([2, 1]) array([2]) array([3]) array([3, 2])
 array([4, 1]) array([3]) array([4]) array([5]) array([5])
 array([], dtype=int64) array([5, 3]) array([], dtype=int64)
 array([], dtype=int64) array([5, 4]) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64) array([7, 2])
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([8, 2]) array([], dtype=int64) array([], dtype=int64) array([7, 5])
 array([8]) array([9]) array([9, 7, 6, 2]) array([], dtype=int64)
 array([9, 3]) array([9]) array([7]) array([10,  1]) array([10])
 array([9]) array([10]) array([8]) array([10]) array([9]) array([11])
 array([11, 10]) array([], dtype=int64) array([11,  9,  7,  3])
 array([10,  6]) array([11,  4]) array([12,  9,  8,  1]) array([11,  5])
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([11,  6]) array([], dtype=int64) array([9]) array([10,  8])
 array([], dtype=int64) array([13,  2]) array([13,  3])
 array([], dtype=int64) array([10,  9]) array([], dtype=int64)
 array([], dtype=int64) array([13,  5]) array([], dtype=int64)
 array([], dtype=int64) array([11,  9]) array([14, 13,  6,  3])
 array([], dtype=int64) array([14,  4]) array([13,  7])
 array([], dtype=int64) array([15,  1]) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([], dtype=int64) array([15, 13,  9,  5]) array([16])
 array([], dtype=int64) array([], dtype=int64) array([16, 12, 11,  3])
 array([], dtype=int64) array([16,  4]) array([15,  7]) array([14,  9])
 array([16]) array([], dtype=int64) array([17]) array([], dtype=int64)
 array([17,  2]) array([14, 10]) array([17,  3]) array([17])
 array([], dtype=int64) array([], dtype=int64) array([17])
 array([], dtype=int64) array([16]) array([18, 17, 15, 10,  6,  1])
 array([18]) array([18,  3]) array([16,  9]) array([17, 13,  7])
 array([18, 14, 12,  4]) array([15, 11]) array([18]) array([17,  8])
 array([], dtype=int64) array([18,  6]) array([19]) array([19])
 array([15, 12]) array([19, 17]) array([18]) array([19, 16, 11,  4])
 array([19]) array([18]) array([17]) array([14]) array([15, 13])
 array([19,  6]) array([20]) array([20,  2]) array([18]) array([20,  3])
 array([19, 17, 11,  7]) array([20]) array([], dtype=int64) array([18])
 array([20, 19, 16]) array([17]) array([20]) array([21, 19])
 array([21, 18]) array([20,  7]) array([21]) array([16]) array([21])
 array([17]) array([19, 10]) array([20]) array([21]) array([18])
 array([21,  6]) array([20, 16, 15,  9]) array([19, 11]) array([22, 17])
 array([22]) array([21]) array([22, 18]) array([22, 20]) array([21, 19])
 array([22,  5]) array([], dtype=int64) array([17, 15])
 array([22, 18, 14,  6]) array([], dtype=int64) array([21,  9])
 array([23, 19, 13,  1]) array([23, 22,  7,  2]) array([23,  3])
 array([], dtype=int64) array([20, 12]) array([23, 17, 16,  4])
 array([22,  8]) array([], dtype=int64) array([23,  5]) array([19, 14])
 array([], dtype=int64) array([23, 22,  9,  6]) array([20, 13])
 array([24,  1]) array([], dtype=int64) array([24, 18, 16,  2])
 array([22, 10]) array([], dtype=int64) array([19, 15])
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([24,  5]) array([], dtype=int64) array([], dtype=int64)
 array([], dtype=int64) array([18, 17]) array([], dtype=int64)
 array([25,  1]) array([22, 12]) array([], dtype=int64) array([25,  3])
 array([21, 14]) array([], dtype=int64) array([], dtype=int64) array([18])
 array([25, 23, 19, 17, 11,  5]) array([22, 13]) array([20, 16])
 array([24,  9]) array([25,  6]) array([21, 15]) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([26, 19, 18,  3]) array([], dtype=int64) array([26,  4])
 array([24, 21, 16, 11]) array([23, 13]) array([26,  5])
 array([], dtype=int64) array([], dtype=int64) array([26,  6])
 array([], dtype=int64) array([19]) array([20, 18])
 array([26, 25, 23, 14, 10,  7]) array([27, 21, 17,  1]) array([27,  2])
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([25, 11]) array([], dtype=int64) array([26,  9])
 array([], dtype=int64) array([27, 21, 18,  6]) array([25, 12])
 array([], dtype=int64) array([22, 17]) array([26, 10]) array([27,  7])
 array([28, 23, 16,  1]) array([], dtype=int64) array([28, 27,  8,  3])
 array([], dtype=int64) array([26, 11]) array([], dtype=int64)
 array([24, 15]) array([21, 19]) array([22, 18]) array([28,  5])
 array([27,  9]) array([], dtype=int64) array([28, 26, 12,  6])
 array([], dtype=int64) array([27, 10]) array([], dtype=int64)
 array([28,  7]) array([29,  1]) array([], dtype=int64) array([28,  8])
 array([29, 27, 25, 15, 11,  3]) array([23, 18]) array([29,  4])
 array([], dtype=int64) array([29,  5]) array([26, 14])
 array([], dtype=int64) array([29,  6]) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([27, 13]) array([30, 26, 15,  1]) array([30,  2])
 array([29, 28, 11,  8]) array([], dtype=int64) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64)
 array([30, 27, 22, 21, 14,  5]) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64) array([30, 25, 18,  7])
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([], dtype=int64) array([31, 26, 17,  2]) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([], dtype=int64) array([30,  9]) array([], dtype=int64)
 array([], dtype=int64) array([31,  6]) array([30, 26, 18, 10])
 array([], dtype=int64) array([], dtype=int64) array([23, 22])
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([32, 31, 25, 20,  8,  1]) array([], dtype=int64)
 array([], dtype=int64) array([31,  9]) array([], dtype=int64)
 array([27, 18]) array([23]) array([32, 24, 22,  6])
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([], dtype=int64) array([], dtype=int64) array([], dtype=int64)
 array([33, 27, 19,  1]) array([30, 14]) array([], dtype=int64)
 array([33, 32, 31, 24, 23, 12,  9,  4]) array([28, 18]) array([25, 22])
 array([26, 21]) array([33]) array([], dtype=int64) array([], dtype=int64)
 array([32, 28, 19, 11]) array([], dtype=int64) array([], dtype=int64)
 array([34]) array([34]) array([34, 29, 18,  3]) array([33])
 array([28, 20]) array([], dtype=int64) array([33]) array([], dtype=int64)
 array([], dtype=int64) array([34]) array([27, 22]) array([], dtype=int64)
 array([], dtype=int64) array([35]) array([35, 31, 25, 17,  5])
 array([], dtype=int64) array([33, 27, 23, 13]) array([35, 30, 19,  6])
 array([], dtype=int64) array([], dtype=int64) array([33, 31, 18, 14])
 array([36, 34, 30, 20, 12,  2]) array([], dtype=int64) array([36])
 array([], dtype=int64) array([31, 19]) array([35, 34]) array([30, 21])
 array([34, 26, 14]) array([], dtype=int64) array([36, 28, 24,  8])
 array([], dtype=int64) array([37, 29, 23,  1]) array([30, 22])
 array([31, 21]) array([37]) array([28, 25]) array([36]) array([30, 23])
 array([38, 34]) array([], dtype=int64) array([38]) array([], dtype=int64)
 array([30, 24]) array([37, 31, 23, 11]) array([37]) array([34])
 array([39, 38]) array([39, 31, 24,  4]) array([28]) array([39])
 array([30, 26]) array([35, 31, 25, 19]) array([40, 37, 35])
 array([], dtype=int64) array([31, 26]) array([41]) array([], dtype=int64)
 array([41, 39, 31, 27, 13,  3]) array([], dtype=int64) array([41])
 array([42]) array([41]) array([], dtype=int64) array([31])]
